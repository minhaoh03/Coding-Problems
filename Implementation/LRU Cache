class LRUCache {

    Map<Integer, Node> storage;
    private int cap;
    private Node head;
    private Node tail;
    private int total;
    
    public LRUCache(int capacity) {
        storage = new HashMap();
        cap = capacity;
        head = new Node(-1, -1, null, null);
        tail = new Node(-1, -1, null, head);
        head.setNext(tail);
        total = 0;
        
    }
    
    public void put(int key, int value) {
        if(storage.containsKey(key)) {
            Node n = storage.get(key);
            n.setVal(value);
            remove(n);
            setFirst(n);
        }
        else {
            Node in = new Node(key, value, null, null);
            storage.put(key, in);
            if(total >= cap) {
                Node last = tail.getPrev();
                remove(last);
                storage.remove(last.getKey());
                setFirst(in);
            }
            else {
                ++total;
                setFirst(in);
            }
        }
    }
    
    public int get(int key) {
        if(storage.containsKey(key)) {
            Node n = storage.get(key);
            remove(n);
            setFirst(n);
            return n.getVal();
        }
        
        return -1;
    }
    
    public void setFirst(Node n) {
        n.setNext(head.getNext());
        n.getNext().setPrev(n);
        n.setPrev(head);
        head.setNext(n);
    }
    
    public void remove(Node n) {
        n.getPrev().setNext(n.getNext());
        n.getNext().setPrev(n.getPrev());
    }
    
}

class Node {
    private int key;
    private Node next;
    private Node prev;
    private int val;
    public Node(int key, int val, Node next, Node prev) {
        this.key = key;
        this.val = val;
        this.next = next;
        this.prev = prev;
    }
    
    public void setNext(Node next) {
        this.next = next;
    }
    
    public void setPrev(Node prev) {
        this.prev = prev;
    }
    
    public Node getNext() {
        return this.next;
    }
    
    public Node getPrev() {
        return this.prev;
    }
    
    public int getKey() {
        return this.key;
    }
    
    public int getVal() {
        return this.val;
    }
    
    public void setVal(int val) {
        this.val = val;
    }
}
/**
 * Your LRUCache object will be instantiated and called as such:
 * LRUCache obj = new LRUCache(capacity);
 * int param_1 = obj.get(key);
 * obj.put(key,value);
 */
