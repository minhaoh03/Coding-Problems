class Solution {
    public boolean canPartition(int[] nums) {
        int total = 0;                          
        for(int i = 0; i < nums.length; ++i)        
            total += nums[i];
        if(total % 2 == 1) return false;        //odd means false
        
        int sum = total/2;
        
        boolean[] dp = new boolean[sum+1];          //dp array to store boolean for all possible sums by index
        dp[0] = true;
        
        for(int num : nums) {                   //for each num
            for(int i = sum; i > 0; --i) {          //i represents total
                if(i >= num)
                    dp[i] = dp[i] || dp[i-num];             //set current total to true if it already is or it can be added up by num and a previous num 
            }
        }
        return dp[sum];             //sum index must be true to return true
    }
}
