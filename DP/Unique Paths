class Solution {
    public int uniquePaths(int m, int n) {
        int[][] dp = new int[m][n];         //dp array
        for(int i = 0; i < m; ++i) {
            for(int j = 0; j < n; ++j) {
                if(i == 0) dp[0][j] = 1;            //all top row counts as one path
                if(j == 0) dp[i][0] = 1;            //all left row counts as one path
                if(i != 0 && j != 0) {      
                    int up = dp[i-1][j];            //above the position
                    int left = dp[i][j-1];          //left of the position
                    dp[i][j] = up + left;           //current position's amount of paths is the additive of up and left
                }
            }
        }
        return dp[m-1][n-1];        //return the final position's value
    }
}
